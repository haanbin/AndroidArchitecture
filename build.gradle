// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext.kotlin_version = "1.4.20"
    ext.hilt_version = '2.28-alpha'
    ext.coroutines_android_version = '1.3.2'
    ext.room_version = '2.2.6'
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:4.1.1"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.google.dagger:hilt-android-gradle-plugin:$hilt_version"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

subprojects { // 앱 내 모듈까지 모두 적용하기 위함

    configurations {
        ktlint
    }

    dependencies {
        ktlint "com.pinterest:ktlint:0.36.0"
        // additional 3rd party ruleset(s) can be specified here
        // just add them to the classpath (e.g. ktlint 'groupId:artifactId:version') and
        // ktlint will pick them up
    }

    // 스타일을 검사하는 태스크
    task ktlint(type: JavaExec, group: "verification") {
        description = "Check Kotlin code style."
        classpath = configurations.ktlint
        main = "com.pinterest.ktlint.Main"
        args "src/**/*.kt"
        // to generate report in checkstyle format prepend following args:
        // "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
        // see https://github.com/pinterest/ktlint#usage for more
    }

    // 스타일을 검사하고 맞지 않는 부분을 수정해주는 태스크
    task ktlintFormat(type: JavaExec, group: "formatting") {
        description = "Fix Kotlin code style deviations."
        classpath = configurations.ktlint
        main = "com.pinterest.ktlint.Main"
        args "-F", "src/**/*.kt"
    }

    // 'check' 태스크가 실행될 때 'ktlint' 태스크가 함께 수행되도록 합니다.
    afterEvaluate { project ->
        check.dependsOn ktlint
    }

    //  check.dependsOn ktlint  // error
}

task clean(type: Delete) {
    delete rootProject.buildDir
}